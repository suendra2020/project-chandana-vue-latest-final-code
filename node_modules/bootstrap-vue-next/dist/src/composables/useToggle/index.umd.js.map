{"version":3,"file":"index.umd.js","sources":["../../../../src/composables/useToggle/index.ts"],"sourcesContent":["import {\n  type ComponentInternalInstance,\n  computed,\n  getCurrentInstance,\n  inject,\n  type MaybeRefOrGetter,\n  toValue,\n} from 'vue'\n\nimport {globalShowHideStorageInjectionKey} from '../../utils/keys'\n\nexport const useToggle = (id: MaybeRefOrGetter<string | undefined> = undefined) => {\n  const instance = getCurrentInstance()\n  const storage = inject(globalShowHideStorageInjectionKey, null)\n\n  if (!storage) {\n    throw new Error(\n      'useToggle() was called outside of the setup() function or the showHide plugin is not provided.'\n    )\n  }\n  const registry = storage.values\n  // const registry = toRef(() => appRegistry.value)\n  const findComponent = (\n    component: ComponentInternalInstance\n  ): ComponentInternalInstance | null => {\n    if (!component.parent) {\n      return null\n    }\n\n    if (\n      component.parent.exposed?.['id'] &&\n      registry.value.get(toValue(component.parent.exposed.id))\n    ) {\n      return component.parent\n    }\n\n    return findComponent(component.parent)\n  }\n\n  const myComponent = computed(() => {\n    const resolvedId = toValue(id)\n\n    if (!registry) return null\n    if (resolvedId) {\n      const value = registry.value.get(resolvedId)\n      return toValue(value) || null\n    }\n\n    if (!instance) {\n      return null\n    }\n\n    const component = findComponent(instance)\n    return toValue(registry.value.get(toValue(component?.exposed?.id))) || null\n  })\n\n  return {\n    value: computed(() => myComponent.value?.value),\n    show: (resolveOnHide?: boolean) =>\n      myComponent.value?.show(resolveOnHide) || Promise.reject('not found'),\n    hide: (trigger?: string) =>\n      myComponent.value?.hide(trigger, true) || Promise.reject('not found'),\n    toggle: (resolveOnHide?: boolean) =>\n      myComponent.value?.toggle(resolveOnHide) || Promise.reject('not found'),\n    component: computed(() => myComponent.value?.component),\n  }\n}\n"],"names":["id","instance","getCurrentInstance","storage","inject","globalShowHideStorageInjectionKey","Error","registry","values","findComponent","component","parent","_a","exposed","value","get","toValue","myComponent","computed","resolvedId","show","resolveOnHide","Promise","reject","hide","trigger","toggle"],"mappings":"gKAWyB,CAACA,OAA2C,KAC7D,MAAAC,EAAWC,EAAAA,qBACXC,EAAUC,EAAAA,OAAOC,EAAAA,kCAAmC,MAE1D,IAAKF,EACH,MAAM,IAAIG,MACR,kGAGJ,MAAMC,EAAWJ,EAAQK,OAEnBC,EACJC,UAEI,OAACA,EAAUC,QAKb,OAAAC,EAAUF,EAAAC,OAAOE,cAAjB,EAAAD,OACAL,EAASO,MAAMC,IAAIC,EAAAA,QAAQN,EAAUC,OAAOE,QAAQb,KAE7CU,EAAUC,OAGZF,EAAcC,EAAUC,QAVtB,IAU4B,EAGjCM,EAAcC,EAAAA,UAAS,WACrB,MAAAC,EAAaH,UAAQhB,GAEvB,IAACO,EAAiB,OAAA,KACtB,GAAIY,EAAY,CACd,MAAML,EAAQP,EAASO,MAAMC,IAAII,GAC1BH,OAAAA,EAAAA,QAAQF,IAAU,IAAA,CAG3B,IAAKb,EACI,OAAA,KAGH,MAAAS,EAAYD,EAAcR,GACzB,OAAAe,UAAQT,EAASO,MAAMC,IAAIC,EAAAA,QAAQ,OAAAJ,EAAA,MAAAF,OAAA,EAAAA,EAAWG,cAAX,EAAAD,EAAoBZ,OAAS,IAAA,IAGlE,MAAA,CACLc,MAAOI,EAAAA,UAAS,WAAM,OAAA,OAAAN,EAAAK,EAAYH,YAAO,EAAAF,EAAAE,KAAA,IACzCM,KAAOC,UACL,OAAA,OAAAT,EAAAK,EAAYH,YAAO,EAAAF,EAAAQ,KAAKC,KAAkBC,QAAQC,OAAO,YAAW,EACtEC,KAAOC,UACL,OAAA,OAAAb,EAAAK,EAAYH,YAAO,EAAAF,EAAAY,KAAKC,GAAS,KAASH,QAAQC,OAAO,YAAW,EACtEG,OAASL,UACP,OAAA,OAAAT,EAAAK,EAAYH,YAAO,EAAAF,EAAAc,OAAOL,KAAkBC,QAAQC,OAAO,YAAW,EACxEb,UAAWQ,EAAAA,UAAS,WAAM,OAAA,OAAAN,EAAAK,EAAYH,YAAO,EAAAF,EAAAF,SAAA,IAC/C"}